STACK SEGMENT STACK
	DB 00FFH DUP(0)
STACK ENDS


DATA SEGMENT
	X1 DB 100 DUP(0)
DATA ENDS


CODE SEGMENT
	ASSUME CS:CODE, DS:DATA, SS:STACK
MAIN PROC FAR
	;SET ADDRESS
	MOV AX, DATA
	MOV DS, AX
	LEA SI, X1
INPUT:MOV AH, 1;INPUT
	INT 21H
	CMP AL, '$'
	JZ INPUT
	MOV[SI], AL
	INC SI
	CMP AL, 0DH
	JNZ INPUT
	DEC SI
	MOV DX, SI	;SI STARTED FROM 0,  INPUT SIZE
	MOV BYTE PTR[SI], '$'
	CALL QUICKSORT	;SORT
	LEA DX, X1	;PRINT ON SCREEN
	MOV AH, 9
	INT 21H
	MOV AH, 4CH ;END PROGRAM
	INT 21H
MAIN ENDP

BUBBLESORT PROC
	;ASSERT: LENGTH=DX(DX THEN USED AS COUNT OF OUTER LOOP)
	;ASSERT: DS UNCHANGED
	;ASSERT: NAME IS X1
	;STACKED REGISTERS: CX, AX
	PUSH CX
	PUSH AX
NEXT2:LEA SI, X1
	MOV CX, DX; COUNT OF INNER LOOP
NEXT:MOV AL, [SI]
	CMP AL, [SI + 1]
	JAE NEXT1; ABOVE/EQUAL, NO ECHG
	XCHG AL, [SI + 1]
	MOV [SI], AL
NEXT1:INC SI
	LOOP NEXT ;NEW INNER LOOP
	DEC DX
	JNZ NEXT2 ;NEW OUTER LOOP
	POP AX
	POP CX
	RET
BUBBLESORT ENDP

QUICKSORT PROC
	;ASSERT: LENGTH=DX
	;ASSERT: DS UNCHANGED, DATA STARTS FROM DS:0
	;ASSERT: START PTR -> CX
	;MOV CX, SP
	XOR AX, AX
	;PUSH AX
	DEC DX
	;PUSH DX
	CALL QUICKSORT_H
	RET
QUICKSORT ENDP

QUICKSORT_H PROC
	;PARAMETERS: STACK -> AX, DX
	MOV CX, SP
	PUSH AX
	PUSH DX
ALWAYS:
	CMP SP, CX
	JE END1
	POP DX
	POP AX
	CALL PARTITION	;RETURN VALUE -> BX
	;CMP AX, (BX-1)
	;DEC BX
	INC AX
	CMP BX, AX
	JBE NEXT	;SINGLE NUMBER, NO PUSH
	DEC AX
	DEC BX
	PUSH AX
	PUSH BX
	INC AX
	INC BX
NEXT:
	DEC AX
	;CMP BX+1, DX
	INC BX
	CMP BX, DX
	;DEC BX
	JAE NEXT2	;SINGLE NUMBER, NO PUSH
	;INC BX
	PUSH BX
	PUSH DX
	;DEC BX
NEXT2:
	DEC BX
	JMP ALWAYS
END1:
	RET
QUICKSORT_H ENDP

PARTITION PROC
	;PARAMETERS: AX, DX
	;RETURN VALUE -> BX
	;STACKED: CX
	PUSH CX
	MOV BX, AX
	MOV DI, DX
	INC DI
	MOV CX, [BX]	;COMPARED VALUE
	AND CX,00FFH
ALWAYS:
	LOOP1:
		INC BX
		CMP BX, DX
		JE LOOP2
		CMP [BX], CL
		JB LOOP1
	LOOP2:
		DEC DI
		CMP DI, AX
		JE OUT1
		CMP [DI], CL
		JA LOOP2
	OUT1:
		CMP BX, DI
		JAE OUT2
		PUSH CX	;EXCHANGE
		MOV CL, [BX]
		XCHG CL, [DI]
		MOV [BX], CL
		POP CX
		JMP ALWAYS
OUT2:
	CMP DI, AX
	JE OUT3
	PUSH CX	;EXCHANGE
	;MOV CX, [DI]
	;XCHG CX, [AX]
	;MOV [DI], CX
	MOV BX, AX
	MOV CL, [DI]
	XCHG CL, [BX]
	MOV [DI], CL
	POP CX
OUT3:
	MOV BX, DI	;RETURN VALUE
	POP CX
	RET
PARTITION ENDP

CODE ENDS
	END MAIN

