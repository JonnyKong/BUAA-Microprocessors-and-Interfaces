DATA SEGMENT
    Y DB 3FH,06H,5BH,4FH,66H,6DH,7DH,07H,7FH,6FH
    X DB 2 DUP(?)
    INPORT_A EQU 288H
    INPORT_C EQU 28AH
    INPORT_1 EQU 28BH
DATA ENDS

STACK SEGMENT STACK
    DB 100H DUP(?)
STACK ENDS

CODE SEGMENT
    ASSUME CS:CODE,DS:DATA,SS:STACK
    
MAIN PROC FAR
;INITIALIZATION
    MOV AX,DATA
    MOV DS,AX
;INPUT
    LEA BX, X
    CALL KEYIN
    AND AL, 0FH    ;CONVERT INTO ASCII
    MOV [BX], AL
    INC BX
    CALL KEYIN
    AND AL, 0FH    ;CONVERT INTO ASCII
    MOV [BX], AL
;SET MODES
    MOV DX, INPORT_1
    MOV AL, 10001010B
    OUT DX, AL
;DISPLAY FIRST DIGIT
    MOV CX, 00FFH
NEXT:
    MOV DX, INPORT_A
    LEA BX, Y    ;TABLE LOOK-UP
    MOV AL, X
    XLAT
    OUT DX, AL
    MOV DX, INPORT_C
    MOV AL, 00000001B
    OUT DX, AL
    CALL DELAY2
    MOV DX, INPORT_C
    MOV AL, 00000000B
    OUT DX, AL
;DISPLAY SECOND NUMBER
    MOV DX, INPORT_A
    LEA BX, Y    ;TABLE LOOP-UP
    MOV AL, X+1
    XLAT
    OUT DX, AL
    MOV DX, INPORT_C
    MOV AL, 00000010B
    OUT DX, AL
    CALL DELAY2
    MOV DX, INPORT_C
    MOV AL, 00000000B
    OUT DX, AL
    JMP NEXT    ;USE JMP TO DISPLAY CONTINUOUSLY
;END FUNCTION
    MOV AH, 4CH
    INT 21H
MAIN ENDP

KEYIN PROC
    AGAIN: MOV AH, 8
    INT 21H
    CMP AL, 30H
    JB AGAIN
    CMP AL, 39H
    JA AGAIN
    MOV DL, AL
    MOV AH, 2
    INT 21H
    RET
KEYIN ENDP

DELAY PROC
    PUSH CX
    MOV CX, 00FFH
    AGAIN1: LOOP AGAIN1
    POP CX
    RET
DELAY ENDP

DELAY2 PROC
    PUSH CX
    PUSH BX
    MOV BX, 0004H
    AGAIN3: MOV CX, 0
    AGAIN2: LOOP AGAIN2
    DEC BX
    CMP BX, 0
    JNZ AGAIN3
    POP BX
    POP CX
    RET
DELAY2 ENDP

CODE ENDS
    END MAIN